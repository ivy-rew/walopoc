{
  "format" : "10.0.0",
  "id" : "184BD7B9D5BC815E",
  "config" : {
    "data" : "ch.walo.poc.lead.LeadProcessData"
  },
  "elements" : [ {
      "id" : "S10",
      "type" : "EmbeddedProcess",
      "name" : [
        "Create Audit",
        "Trail PDF"
      ],
      "elements" : [ {
          "id" : "S10-f395",
          "type" : "Script",
          "name" : [
            "Get Audit Trail",
            "Put in Record Set",
            "for TableMerge"
          ],
          "config" : {
            "output" : {
              "code" : [
                "import ch.ivyteam.ivy.workflow.TaskState;",
                "import ch.ivyteam.ivy.workflow.INote;",
                "import ch.ivyteam.ivy.workflow.ITask;",
                "",
                "//import vat.Company;",
                "",
                "List<ITask> tasks;",
                "",
                "",
                "List <String> name;",
                "List <String> activator;",
                "List <String> endTimeStamp;",
                "List <String> id;",
                "",
                "",
                "//Get relevant tasks",
                "for (ITask t : ivy.case.tasks().all()) {",
                "      if (t.getState() != TaskState.DESTROYED",
                "                && t.getState() != TaskState.FAILED) {",
                "    name.add(t.getName());",
                "    activator.add(t.getActivatorName());",
                "    endTimeStamp.add(t.getEndTimestamp().toString());",
                "    id.add(t.getId().toString());",
                "    }",
                "",
                "}",
                "",
                "Recordset rsTask = new Recordset();",
                "rsTask.addColumn(\"name\",name);",
                "rsTask.addColumn(\"activator\",activator);",
                "rsTask.addColumn(\"endTimeStamp\",endTimeStamp);",
                "rsTask.addColumn(\"id\",id);",
                "",
                "in.misc.tableNames.add(\"tasks\");",
                "in.misc.tableRecords.add(rsTask);",
                "",
                "",
                "List <String> writername;",
                "List <String> creationTimestamp;",
                "List <String> message;",
                "",
                "",
                "for (INote inote: ivy.case.getNotes()) {",
                "",
                "  creationTimestamp.add(inote.getCreationTimestamp().toString());",
                "  writername.add(inote.getWritterName());",
                "  message.add(inote.getMessage());",
                "",
                "}",
                "",
                "Recordset notes = new Recordset();",
                "notes.addColumn(\"writername\",writername);",
                "notes.addColumn(\"message\",message);",
                "notes.addColumn(\"creationTimestamp\",creationTimestamp);",
                "",
                "",
                "in.misc.tableRecords.add(notes);",
                "in.misc.tableNames.add(\"notes\");"
              ]
            }
          },
          "visual" : {
            "at" : { "x" : 360, "y" : 160 }
          },
          "connect" : { "id" : "S10-f399", "to" : "S10-f398" }
        }, {
          "id" : "S10-f398",
          "type" : "SubProcessCall",
          "name" : [
            "Create Document",
            "with Table"
          ],
          "config" : {
            "call" : {
              "params" : [
                { "name" : "listOfTemplateMergeFields", "type" : "List<ch.ivyteam.ivy.addons.docfactory.TemplateMergeField>" },
                { "name" : "optionalOutputpath", "type" : "String" },
                { "name" : "optionalLetterName", "type" : "String" },
                { "name" : "optionalOutputFormat", "type" : "String" },
                { "name" : "templatePath", "type" : "String" },
                { "name" : "tableNamesList", "type" : "List<String>" },
                { "name" : "recordsetsList", "type" : "List<Recordset>" }
              ],
              "map" : {
                "param.optionalLetterName" : "\"DocWithTable\"",
                "param.optionalOutputFormat" : "\"pdf\"",
                "param.templatePath" : "in.misc.templateFileFromCMS.getAbsolutePath()",
                "param.tableNamesList" : "in.misc.tableNames",
                "param.recordsetsList" : "in.misc.tableRecords"
              },
              "code" : [
                "",
                "",
                "// \"c:\\\\temp\\\\AuditTrailExport.doc\""
              ]
            },
            "processCall" : "Functional Processes/writeSerialLetterToOneCorrespondent:writeDocumentWithMailMergeTable(List<ch.ivyteam.ivy.addons.docfactory.TemplateMergeField>,String,String,String,String,List<String>,List<Recordset>)",
            "output" : {
              "code" : [
                "//import ch.ivyteam.ivy.docFactoryExamples.Util.FilesUtil;",
                "//in.templateFile.delete();",
                "",
                "//FilesUtil.setFileRef(result.fileOperationMessage.files.get(0));",
                "//ivy.case.documents().add(\"Report.pdf\").write().withContentFrom(result.fileOperationMessage.getFiles().get(0)).read().asIvyFile();",
                "ivy.case.documents().add(\"AuditTrail.pdf\").write().withContentFrom(result.fileOperationMessage.files.get(0)).read().asIvyFile();"
              ]
            }
          },
          "visual" : {
            "at" : { "x" : 512, "y" : 160 },
            "icon" : "res:/webContent/icons/doc-factory-logo.png"
          },
          "connect" : { "id" : "S10-f1", "to" : "S10-g1" }
        }, {
          "id" : "S10-f393",
          "type" : "Script",
          "name" : [
            "Get template from",
            "CMS"
          ],
          "config" : {
            "output" : {
              "code" : [
                "//Create a ile that will hold the template - true makes it temporary -> aut. deleted",
                "in.misc.templateFileFromCMS = new File(\"template.doc\",true);",
                "//Save result in java File of ivy File",
                "ivy.cms.getContentObjectValue(\"/templates/templateAuditTable\",ivy.session.contentLocale).exportContentToFile(in.misc.templateFileFromCMS.getJavaFile(),null);",
                "",
                "//ivy.cms.getContentObject(\"/Language/Misc/template_service\").getValues().get(0).exportContentToFile(in.misc.filehelper.templateFile.getJavaFile(),null);"
              ]
            }
          },
          "visual" : {
            "at" : { "x" : 200, "y" : 160 },
            "size" : { "width" : 128, "height" : 60 }
          },
          "connect" : { "id" : "S10-f2", "to" : "S10-f395" }
        }, {
          "id" : "S10-g0",
          "type" : "EmbeddedStart",
          "name" : "in 1",
          "visual" : {
            "at" : { "x" : 64, "y" : 160 }
          },
          "parentConnector" : "f7",
          "connect" : { "id" : "S10-f0", "to" : "S10-f393" }
        }, {
          "id" : "S10-g1",
          "type" : "EmbeddedEnd",
          "name" : "out 1",
          "visual" : {
            "at" : { "x" : 640, "y" : 160 }
          },
          "parentConnector" : "f14"
        } ],
      "visual" : {
        "at" : { "x" : 824, "y" : 288 }
      },
      "connect" : { "id" : "f14", "to" : "f13" }
    }, {
      "id" : "f0",
      "type" : "RequestStart",
      "name" : "start.ivp",
      "config" : {
        "callSignature" : "start",
        "case" : {
          "name" : "Lead Prozess",
          "category" : "Lead"
        },
        "outLink" : "start.ivp",
        "startName" : "<%=ivy.cms.co(\"/process/ProcessName\")%>"
      },
      "visual" : {
        "at" : { "x" : 80, "y" : 288 }
      },
      "connect" : { "id" : "f4", "to" : "f2" }
    }, {
      "id" : "f3",
      "type" : "DialogCall",
      "name" : "Lead erfassen",
      "config" : {
        "dialogId" : "ch.walo.poc.lead.LeadGUI",
        "startMethod" : "start(ch.walo.poc.lead.LeadProcessData,Number)",
        "output" : {
          "map" : {
            "out" : [
              "in",
              "result.leadProcessData"
            ]
          }
        },
        "call" : {
          "params" : [
            { "name" : "leadProcessData", "type" : "ch.walo.poc.lead.LeadProcessData" },
            { "name" : "approvalLevelIndex", "type" : "Number" }
          ],
          "map" : {
            "param.leadProcessData" : "in",
            "param.leadProcessData.misc.actualstep" : "\"erfassen\""
          }
        }
      },
      "visual" : {
        "at" : { "x" : 352, "y" : 288 }
      },
      "connect" : { "id" : "f1", "to" : "f9" }
    }, {
      "id" : "f8",
      "type" : "RequestStart",
      "name" : "Dev-Start",
      "config" : {
        "callSignature" : "start3",
        "input" : {
          "map" : {
            "out.businessObject.project.budget" : "40000"
          }
        },
        "outLink" : "start3.ivp",
        "showInStartList" : false
      },
      "visual" : {
        "at" : { "x" : 520, "y" : 376 }
      },
      "connect" : { "id" : "f10", "to" : "f9" }
    }, {
      "id" : "f9",
      "type" : "SubProcessCall",
      "name" : [
        "Get",
        "ApprovalHierarchy"
      ],
      "config" : {
        "processCall" : "ApprovalHierarchy:hierarchy(Number,String)",
        "output" : {
          "map" : {
            "out" : "in",
            "out.businessObject.approvalHier" : "result.approvers"
          }
        },
        "call" : {
          "params" : [
            { "name" : "amount", "type" : "Number" },
            { "name" : "procurementStructureId", "type" : "String" }
          ],
          "map" : {
            "param.amount" : "in.businessObject.project.budget",
            "param.procurementStructureId" : "\"1\""
          }
        }
      },
      "visual" : {
        "at" : { "x" : 520, "y" : 288 }
      },
      "connect" : { "id" : "f12", "to" : "f11" }
    }, {
      "id" : "f11",
      "type" : "SubProcessCall",
      "name" : "ApprovalProcess",
      "config" : {
        "processCall" : "ApprovalProcess:call(ch.walo.poc.lead.LeadProcessData)",
        "call" : {
          "params" : [
            { "name" : "leadProcessData", "type" : "ch.walo.poc.lead.LeadProcessData" }
          ],
          "map" : {
            "param.leadProcessData" : "in"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 672, "y" : 288 }
      },
      "connect" : { "id" : "f7", "to" : "S10" }
    }, {
      "id" : "f13",
      "type" : "TaskEnd",
      "visual" : {
        "at" : { "x" : 960, "y" : 288 }
      }
    }, {
      "id" : "f2",
      "type" : "RestClientCall",
      "name" : "Login",
      "config" : {
        "path" : "/me",
        "clientId" : "f628d7ad-5d13-4eeb-9820-ca0e7f0ae2eb",
        "clientErrorCode" : "ivy:error:rest:client",
        "statusErrorCode" : "ivy:error:rest:client",
        "resultType" : "com.microsoft.graph.sharepoint.MicrosoftGraphUser"
      },
      "visual" : {
        "at" : { "x" : 192, "y" : 288 },
        "icon" : "res:/webContent/icons/microsoft.png"
      },
      "connect" : { "id" : "f5", "to" : "f3" }
    }, {
      "id" : "f6",
      "type" : "SignalStartEvent",
      "name" : "createLead",
      "config" : {
        "signalCode" : "createLead",
        "output" : {
          "code" : [
            "import ch.walo.poc.lead.api.LeadService.LeadInit;",
            "out.misc.leadInit=signal.getSignalData() as LeadInit;",
            "",
            "out.businessObject.project.budget=out.misc.leadInit.budget;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 128, "y" : 72 },
        "labelOffset" : { "x" : 13, "y" : 33 }
      },
      "connect" : { "id" : "f16", "to" : "f15" }
    }, {
      "id" : "f15",
      "type" : "SubProcessCall",
      "name" : "get first Project",
      "config" : {
        "processCall" : "FindProject:findProject(String)",
        "call" : {
          "params" : [
            { "name" : "name", "type" : "String" }
          ],
          "map" : {
            "param.name" : "in.misc.leadInit.projectName"
          }
        },
        "output" : {
          "code" : "out.businessObject.project.projectConnect=result.projects.get(0);"
        }
      },
      "visual" : {
        "at" : { "x" : 352, "y" : 72 },
        "icon" : "res:/webContent/logo/WALO_Logo_Pantone_C.png"
      },
      "connect" : { "id" : "f18", "to" : "f17" }
    }, {
      "id" : "f17",
      "type" : "SubProcessCall",
      "name" : "get first Customer",
      "config" : {
        "processCall" : "FindCustomer:findCustomer(String,String)",
        "call" : {
          "params" : [
            { "name" : "name", "type" : "String" },
            { "name" : "fallback", "type" : "String" }
          ],
          "map" : {
            "param.name" : "in.misc.leadInit.customerName"
          }
        },
        "output" : {
          "code" : "out.businessObject.customer.customerConnect=result.customers.get(0);"
        }
      },
      "visual" : {
        "at" : { "x" : 520, "y" : 72 }
      },
      "connect" : { "id" : "f19", "to" : "f9" }
    }, {
      "id" : "f20",
      "type" : "ProcessAnnotation",
      "name" : "Budget darf nur Int sein! Noch nicht gemappt!",
      "visual" : {
        "at" : { "x" : 152, "y" : 152 }
      },
      "connect" : { "id" : "f21", "to" : "f6" }
    } ],
  "layout" : {
    "lanes" : [ {
        "name" : "Walo Lead",
        "offset" : 16,
        "size" : 416,
        "lanes" : [ {
            "name" : "External",
            "size" : 144
          } ]
      } ]
  }
}